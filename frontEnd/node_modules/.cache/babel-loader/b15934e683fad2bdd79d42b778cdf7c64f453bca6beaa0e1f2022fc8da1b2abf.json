{"ast":null,"code":"const API_URL = 'http://localhost:5000/api';\nexport const api = {\n  async getAllNotes() {\n    const response = await fetch(`${API_URL}/notes`);\n    if (!response.ok) throw new Error('Failed to fetch notes');\n    return response.json();\n  },\n  async createNote(note) {\n    const response = await fetch(`${API_URL}/notes`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n    if (!response.ok) throw new Error('Failed to create note');\n    return response.json();\n  },\n  async updateNote(id, note) {\n    const response = await fetch(`${API_URL}/notes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n    if (!response.ok) throw new Error('Failed to update note');\n    return response.json();\n  },\n  async deleteNote(id) {\n    const response = await fetch(`${API_URL}/notes/${id}`, {\n      method: 'DELETE'\n    });\n    if (!response.ok) throw new Error('Failed to delete note');\n    return response.json();\n  }\n};","map":{"version":3,"names":["API_URL","api","getAllNotes","response","fetch","ok","Error","json","createNote","note","method","headers","body","JSON","stringify","updateNote","id","deleteNote"],"sources":["C:/Users/baile/OneDrive/Desktop/Projects/Notes/frontEnd/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\r\n\r\nexport const api = {\r\n  async getAllNotes() {\r\n    const response = await fetch(`${API_URL}/notes`);\r\n    if (!response.ok) throw new Error('Failed to fetch notes');\r\n    return response.json();\r\n  },\r\n\r\n  async createNote(note) {\r\n    const response = await fetch(`${API_URL}/notes`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(note),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to create note');\r\n    return response.json();\r\n  },\r\n\r\n  async updateNote(id, note) {\r\n    const response = await fetch(`${API_URL}/notes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(note),\r\n    });\r\n    if (!response.ok) throw new Error('Failed to update note');\r\n    return response.json();\r\n  },\r\n\r\n  async deleteNote(id) {\r\n    const response = await fetch(`${API_URL}/notes/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    if (!response.ok) throw new Error('Failed to delete note');\r\n    return response.json();\r\n  },\r\n}; "],"mappings":"AAAA,MAAMA,OAAO,GAAG,2BAA2B;AAE3C,OAAO,MAAMC,GAAG,GAAG;EACjB,MAAMC,WAAWA,CAAA,EAAG;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,CAAC;IAChD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,UAAUA,CAACC,IAAI,EAAE;IACrB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,EAAE;MAC/CU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMQ,UAAUA,CAACC,EAAE,EAAEP,IAAI,EAAE;IACzB,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,UAAUgB,EAAE,EAAE,EAAE;MACrDN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACN,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMU,UAAUA,CAACD,EAAE,EAAE;IACnB,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,UAAUgB,EAAE,EAAE,EAAE;MACrDN,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}